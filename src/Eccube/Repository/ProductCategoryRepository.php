<?php

/*
 * This file is part of EC-CUBE
 *
 * Copyright(c) EC-CUBE CO.,LTD. All Rights Reserved.
 *
 * http://www.ec-cube.co.jp/
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Eccube\Repository;

use Eccube\Entity\ProductCategory;
use Symfony\Bridge\Doctrine\RegistryInterface;

/**
 * ProductCategoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductCategoryRepository extends AbstractRepository
{
    public function __construct(RegistryInterface $registry)
    {
        parent::__construct($registry, ProductCategory::class);
    }

    public function getCatProducts() {
        $parameters = array();
        // $parameters['plgFieldContent8'] = 1;
        // $parameters['entity'] = 'productcategory';
        $parameters['null'] = 'NULL';
        $parameters['category_id'] = 22;
        
        $customFields = $this->createQueryBuilder('pct')
        // ->select(['pct.targetId', 'cc.plgFieldContent1'])
        ->innerJoin('Eccube\Entity\Product', 'p', 'WITH', 'pct.Product = p.id')
        // ->where('p.entity = :entity')
        ->Where('pct.Product != :null')
        ->andWhere('p.Status != 2')
        ->andWhere('pct.category_id = :category_id')
        ->setParameters($parameters)
        ->orderBy('pct.Product', 'ASC')
        ->getQuery()
        ->getResult();
        return $customFields;
    }
}
