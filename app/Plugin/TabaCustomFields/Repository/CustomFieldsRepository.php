<?php
/*
 * This file is part of the TabaCustomFields plugin
 *
 * Copyright (C) SPREAD WORKS Inc. All Rights Reserved.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Plugin\TabaCustomFields\Repository;

use Eccube\Repository\AbstractRepository;
use Doctrine\Common\Persistence\ManagerRegistry;
use Plugin\TabaCustomFields\Entity\CustomFields;


/**
 * CustomFieldsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CustomFieldsRepository extends AbstractRepository
{
    /**
     * CustomFieldsRepository constructor.
     * @param ManagerRegistry $registry
     * @param string $entityClass
     */
    public function __construct(ManagerRegistry $registry, $entityClass = CustomFields::class)
    {
        parent::__construct($registry, $entityClass);
    }

    /**
     * カスタムフィールドの定義を返します
     * 
     * @param string $target_entity
     * @param array $condition
     * @return CustomFieldsRepository
     */
    public function getCustomField($target_entity, $condition) {
        $qb = $this->createQueryBuilder('cf')->select('cf')
                ->where('cf.targetEntity = :target_entity')
                ->setParameter('target_entity', $target_entity);

        if (isset($condition['column_id'])) {
            $qb->andWhere('cf.columnId = :column_id')
                ->setParameter('column_id', $condition['column_id']);
        }
        if (isset($condition['data_key'])) {
            $qb->andWhere('cf.dataKey = :data_key')
                ->setParameter('data_key', $condition['data_key']);
        }
        if (isset($condition['write_allowed_id'])) {
            $qb->andWhere('cf.writeAllowed >= :write_allowed_id')
                ->setParameter('write_allowed_id', $condition['write_allowed_id']);
        }
        $qb->addOrderBy("cf.rank",  "ASC")
            ->addOrderBy("cf.columnId",  "ASC");
        try {
            $customField = $qb->getQuery()->getSingleResult();
            return $customField;
        } catch (\Doctrine\ORM\NoResultException $e) {
            return false;
        }
        
    }

    /**
     * 追加先ごとのカスタムフィールドの定義をすべて返します
     * 
     * @param string $target_entity
     * @return array CustomFieldsRepository
     */
    public function getCustomFields($target_entity) {
        // where
        $where = array();
        $where['targetEntity'] = $target_entity;
        
        $customFields = $this->findBy(
            $where,
            array(
                'rank' => 'ASC',
                'columnId' => 'ASC'
            )
        );
        return $customFields;
    }
    
    
    /**
     * 追加先・読み込み権限ごとのカスタムフィールドの定義を返します
     * 
     * @param string $target_entity
     * @param int  $read_allowed_id
     * @return array CustomFieldsRepository
     */
    public function getReadCustomFields($target_entity, $read_allowed_id) {
        $parameters = array();
        $parameters['target_entity'] = $target_entity;
        $parameters['read_allowed_id'] = $read_allowed_id;
        $customFields = $this->createQueryBuilder('cf')
                ->select('cf')
                ->where('cf.targetEntity = :target_entity')
                ->andWhere('cf.readAllowed >= :read_allowed_id')
                ->addOrderBy("cf.rank",  "ASC")
                ->addOrderBy("cf.columnId",  "ASC")
                ->setParameters($parameters)
                ->getQuery()
                ->getResult();
        return $customFields;
    }

    /**
     * 追加先・書き込み権限ごとのカスタムフィールドの定義を返します
     * 
     * @param string $target_entity
     * @param int  $write_allowed_id
     * @return array CustomFieldsRepository
     */
    public function getWriteCustomFields($target_entity, $write_allowed_id) {
        $parameters = array();
        $parameters['target_entity'] = $target_entity;
        $parameters['write_allowed_id'] = $write_allowed_id;
        $customFields = $this->createQueryBuilder('cf')
                ->select('cf')
                ->where('cf.targetEntity = :target_entity')
                ->andWhere('cf.writeAllowed >= :write_allowed_id')
                ->addOrderBy("cf.rank",  "ASC")
                ->addOrderBy("cf.columnId",  "ASC")
                ->setParameters($parameters)
                ->getQuery()
                ->getResult();
        return $customFields;
    }

    /**
     * 新規カスタムフィールドオブジェクトを返します
     * 
     * @return CustomFieldsRepository
     * @param string $target_entity
     */
    public function newCustomField($target_entity)
    {
        $customField =new \Plugin\TabaCustomFields\Entity\CustomFields();
        $customField->setRank(100);
        $customField->setTargetEntity($target_entity);
        return $customField;
    }

    /**
     * カスタムフィールドで利用するカラム番号を返します
     * 
     * @return CustomFieldsRepository
     * @param string $target_entity
     */
    public function getNewColumnId($target_entity) {
        $max_column_id = $this->createQueryBuilder('cc')
                    ->select('MAX(cc.columnId)')
                    ->where('cc.targetEntity = :targetEntity')->setParameter('targetEntity', $target_entity)
                    ->getQuery()
                    ->getSingleScalarResult();
                    
        if ($max_column_id) {
            return $max_column_id+1;
        }
        return 1;
    }

    public function getPriceRange() {
        $parameters = array();
        $parameters['dataKey'] = 'askingprice';
        
        $customFields = $this->createQueryBuilder('cc')
        ->select('cc')
        ->andWhere('cc.dataKey = :dataKey')
        ->setParameters($parameters)
        ->getQuery()
        ->getResult();
        return $customFields;
    }
}
